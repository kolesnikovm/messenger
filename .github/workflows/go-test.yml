name: Go Test

on: [push]

jobs:

  test:
    runs-on: ubuntu-latest
    container: golang:1.21.1

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: messenger
        volumes:
          - ${{ GITHUB_WORKSPACE }}/create_database.sql:/docker-entrypoint-initdb.d/create_database.sql
      kafka:
        image: 'bitnami/kafka:latest'
        env:
          KAFKA_CFG_NODE_ID: 0
          KAFKA_CFG_PROCESS_ROLES: broker,controller
          KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
          KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT

    steps:
      - uses: actions/checkout@v4

      - name: Build
        working-directory: src
        run: go build -o messenger -buildvcs=false

      - name: Setup DB
        working-directory: src
        run: ./messenger migrations up
        env:
          POSTGRES_URL: postgres://postgres:postgres@postgres:5432/messenger1,postgres://postgres:postgres@postgres:5432/messenger2
          KAFKA_BROKER_LIST: kafka:9092

      - name: Test
        working-directory: src
        run: go test -race ./...
        env:
          POSTGRES_URL: postgres://postgres:postgres@postgres:5432/messenger1,postgres://postgres:postgres@postgres:5432/messenger2
          KAFKA_BROKER_LIST: kafka:9092
