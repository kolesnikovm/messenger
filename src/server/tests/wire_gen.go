// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package tests

import (
	"github.com/kolesnikovm/messenger/configs"
	"github.com/kolesnikovm/messenger/di"
	"github.com/kolesnikovm/messenger/notifier/mocks"
	"github.com/kolesnikovm/messenger/server/grpc"
	"github.com/kolesnikovm/messenger/server/grpc/messenger"
	mocks2 "github.com/kolesnikovm/messenger/store/mocks"
	"github.com/kolesnikovm/messenger/usecase/message"
	"testing"
)

// Injectors from wire.go:

func InitializeSuite(t *testing.T, conf configs.ServerConfig) (*Suite, error) {
	mockMessageSender := mocks.ProvideNotifier(t)
	messageUseCase := message.New(mockMessageSender)
	handler := messenger.NewHandler(messageUseCase)
	streamServerInterceptor := grpc.NewInterceptor()
	serverBuilder := grpc.ServerBuilder{
		MessengerServer: handler,
		Interceptor:     streamServerInterceptor,
	}
	server := di.ProvideServer(serverBuilder)
	clientConn, err := newConnection(t, server)
	if err != nil {
		return nil, err
	}
	messengerClient := newClient(clientConn)
	mockMessages := mocks2.ProvideStore(t)
	suite := &Suite{
		grpcServer:             server,
		messengerServiceClient: messengerClient,
		conn:                   clientConn,
		messageSender:          mockMessageSender,
		messageStore:           mockMessages,
		t:                      t,
	}
	return suite, nil
}
