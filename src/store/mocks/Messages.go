// Code generated by mockery v2.35.4. DO NOT EDIT.

package mocks

import (
	entity "github.com/kolesnikovm/messenger/entity"
	mock "github.com/stretchr/testify/mock"
)

// MockMessages is an autogenerated mock type for the Messages type
type MockMessages struct {
	mock.Mock
}

type MockMessages_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMessages) EXPECT() *MockMessages_Expecter {
	return &MockMessages_Expecter{mock: &_m.Mock}
}

// Save provides a mock function with given fields: message
func (_m *MockMessages) Save(message *entity.Message) {
	_m.Called(message)
}

// MockMessages_Save_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Save'
type MockMessages_Save_Call struct {
	*mock.Call
}

// Save is a helper method to define mock.On call
//   - message *entity.Message
func (_e *MockMessages_Expecter) Save(message interface{}) *MockMessages_Save_Call {
	return &MockMessages_Save_Call{Call: _e.mock.On("Save", message)}
}

func (_c *MockMessages_Save_Call) Run(run func(message *entity.Message)) *MockMessages_Save_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*entity.Message))
	})
	return _c
}

func (_c *MockMessages_Save_Call) Return() *MockMessages_Save_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMessages_Save_Call) RunAndReturn(run func(*entity.Message)) *MockMessages_Save_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockMessages creates a new instance of MockMessages. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMessages(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMessages {
	mock := &MockMessages{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
